version: '3.8'

services:
  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - REDIS_URL=redis://redis:6379
      - APP_HOST=0.0.0.0
      - APP_PORT=8000
    volumes:
      - ./HR-Policy (1).pdf:/app/HR-Policy (1).pdf:ro
      - ./cache:/app/cache
      - ./faiss_index:/app/faiss_index
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Frontend
  frontend:
    build: .
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://backend:8000
    command: streamlit run frontend.py --server.port=8501 --server.address=0.0.0.0
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

volumes:
  redis_data:
